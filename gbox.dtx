% \iffalse meta-comment
%<*internal>
\iffalse
%</internal>
%<*readme>
----------------------------------------------------------------
gbox --- An mbox that preserves math mode.
Author:  Mike Conley
E-mail:  conasdf@gmail.com
License: Released under the LaTeX Project Public License v1.3c or later
See:     http://www.latex-project.org/lppl.txt
----------------------------------------------------------------

Some text about the package: probably the same as the abstract.
%</readme>
%<*internal>
\fi
\def\nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
  \expandafter\begingroup
\fi
%</internal>
%<*install>
\input docstrip.tex
\keepsilent
\askforoverwritefalse
\preamble
----------------------------------------------------------------
gbox --- An mbox that preserves math mode.
Author:  Mike Conley
E-mail:  conasdf@gmail.com
License: Released under the LaTeX Project Public License v1.3c or later
See:     http://www.latex-project.org/lppl.txt
----------------------------------------------------------------

\endpreamble
\postamble

Copyright (C) 2017 by Mike Conley <conasdf@gmail.com>

This work may be distributed and/or modified under the
conditions of the LaTeX Project Public License (LPPL), either
version 1.3c of this license or (at your option) any later
version.  The latest version of this license is in the file:

http://www.latex-project.org/lppl.txt

This work is "maintained" (as per LPPL maintenance status) by
Mike Conley.

This work consists of the file gbox.dtx and a Makefile.
Running "make" generates the derived files README, gbox.pdf and gbox.sty.
Running "make inst" installs the files in the user's TeX tree.
Running "make install" installs the files in the local TeX tree.

\endpostamble

\usedir{tex/latex/gbox}
\generate{
  \file{\jobname.sty}{\from{\jobname.dtx}{package}}
}
%</install>
%<install>\endbatchfile
%<*internal>
\usedir{source/latex/gbox}
\generate{
  \file{\jobname.ins}{\from{\jobname.dtx}{install}}
}
\nopreamble\nopostamble
\usedir{doc/latex/gbox}
\generate{
  \file{README.txt}{\from{\jobname.dtx}{readme}}
}
\ifx\fmtname\nameofplainTeX
  \expandafter\endbatchfile
\else
  \expandafter\endgroup
\fi
%</internal>
% \fi
%
% \iffalse
%<*driver>
\ProvidesFile{gbox.dtx}
%</driver>
%<package>\NeedsTeXFormat{LaTeX2e}[1999/12/01]
%<package>\RequirePackage{package, ifmm}
%<package>\ProvidesPackage{gbox}
%<*package>
    [2005/08/30 v1.00 An mbox that preserves math mode.]
%</package>
%<*driver>
\documentclass{ltxdoc}
\usepackage[a4paper,margin=25mm,left=50mm,nohead]{geometry}
\usepackage[numbered]{hypdoc}
\usepackage{\jobname}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
% \GetFileInfo{\jobname.dtx}
% \DoNotIndex{\newcommand,\newenvironment}
%
%\title{\textsf{gbox} --- An mbox that preserves math mode.\thanks{This file
%   describes version \fileversion, last revised \filedate.}
%}
%\author{Mike Conley\thanks{E-mail: conasdf@gmail.com}}
%\date{Released \filedate}
%
%\maketitle
%
%\changes{v1.00}{2005/08/30}{First public release}
%
% \section{Usage}
%
% \DescribeMacro{\outermathstyle}
%
% \DescribeMacro{\gbox}
%
% A generic \verb!\mbox!.  Unlike \verb!\mbox!, \verb!\gbox! preserves
% mathmode, i.e., \verb!$\gbox{math math}$! will be typeset as
% $\gbox{math math}$. Similarly, \verb!\[\gbox{math math}\]! will be
% typeset as \[\gbox{math math}\]
%
% \verb!\gbox! also preserves the current math style, i.e., used in
% displaymode or as a super/subscript will also typeset its contents
% appropriately, e.g., \verb!$X^{\gbox{y_{\gbox{z}}}}$! is typeset as $X^{\gbox{y_{\gbox{z}}}}$.
%
%
%\StopEventually{^^A
%  \break
%  \PrintChanges
%  \break
%  \PrintIndex
%}
%
% \section{Implementation}
%
%    \begin{macrocode}
%<*package>

%    \end{macrocode}
%
% \begin{macro}{\outermathstyle}
%
% Another simple application of \verb!\mathchoice!, using \verb!\everymath! to restore the current style in future math modes.
%
%    \begin{macrocode}
\newcommand{\outermathstyle}[1]{
  \mathchoice{\everymath = {\displaystyle} #1}
             {#1}
             {\everymath = {\scriptstyle} #1}
             {\everymath = {\scriptscriptstyle} #1}
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\gbox}
%    \begin{macrocode}
\newcommand{\gbox}[1]{
%    \end{macrocode}
% We're in math mode. Grab the current math style with \verb!\outermathstyle! in
% a group (to avoid changing any existing value it may have), then create an
% mbox having \verb!\mathsurround=0! (to avoid typesetting any nonzero value
% redundantly inside the mbox).
%    \begin{macrocode}
    \ifmm{\begingroup\outermathstyle{\mbox{\m@th$#1$}}\endgroup}
%    \end{macrocode}
% If we're not in math mode, a gbox is just an mbox.
%    \begin{macrocode}
         {\mbox{#1}}
}
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
\EndPackage
%</package>
%    \end{macrocode}
%
%
%
%\Finale
